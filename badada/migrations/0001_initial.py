# Generated by Django 4.2.3 on 2023-07-20 05:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_content', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'answer',
                'db_table_comment': '답변',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Beach',
            fields=[
                ('beach', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('attribute_1', models.CharField(blank=True, max_length=1000, null=True)),
                ('attribute_2', models.CharField(blank=True, max_length=1000, null=True)),
                ('attribute_3', models.CharField(blank=True, max_length=1000, null=True)),
                ('recommendation_1', models.CharField(blank=True, max_length=1000, null=True)),
                ('recommendation_2', models.CharField(blank=True, max_length=1000, null=True)),
                ('recommendation_3', models.CharField(blank=True, max_length=1000, null=True)),
                ('category_1', models.CharField(blank=True, max_length=100, null=True)),
                ('category_2', models.CharField(blank=True, max_length=100, null=True)),
                ('category_3', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'beach',
                'db_table_comment': '해변 정보',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('good', models.IntegerField(blank=True, null=True)),
                ('bad', models.IntegerField(blank=True, null=True)),
                ('good_1', models.IntegerField(blank=True, null=True)),
                ('good_2', models.IntegerField(blank=True, null=True)),
                ('good_3', models.IntegerField(blank=True, null=True)),
                ('good_4', models.IntegerField(blank=True, null=True)),
                ('good_5', models.IntegerField(blank=True, null=True)),
                ('good_text', models.CharField(blank=True, max_length=1000, null=True)),
                ('bad_1', models.IntegerField(blank=True, null=True)),
                ('bad_2', models.IntegerField(blank=True, null=True)),
                ('bad_3', models.IntegerField(blank=True, null=True)),
                ('bad_4', models.IntegerField(blank=True, null=True)),
                ('bad_5', models.IntegerField(blank=True, null=True)),
                ('bad_text', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'feedback',
                'db_table_comment': '피드백',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mbti',
            fields=[
                ('mbti', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('good_mbti', models.CharField(blank=True, max_length=4, null=True)),
                ('bad_mbti', models.CharField(blank=True, max_length=4, null=True)),
            ],
            options={
                'db_table': 'mbti',
                'db_table_comment': 'mbti 관련 정보',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MbtiCnt',
            fields=[
                ('mbti', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('mbti_cnt', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'mbti_cnt',
                'db_table_comment': 'mbti별 누적 결과',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('question_num', models.IntegerField(primary_key=True, serialize=False)),
                ('question_content', models.CharField(blank=True, max_length=1000, null=True)),
            ],
            options={
                'db_table': 'question',
                'db_table_comment': '질문',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserCnt',
            fields=[
                ('total_user_cnt', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'user_cnt',
                'db_table_comment': '서비스 사용자 수',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnswerMbtiScore',
            fields=[
                ('id', models.OneToOneField(db_column='id', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='badada.answer')),
                ('e', models.IntegerField(blank=True, null=True)),
                ('i', models.IntegerField(blank=True, null=True)),
                ('s', models.IntegerField(blank=True, null=True)),
                ('n', models.IntegerField(blank=True, null=True)),
                ('t', models.IntegerField(blank=True, null=True)),
                ('f', models.IntegerField(blank=True, null=True)),
                ('p', models.IntegerField(blank=True, null=True)),
                ('j', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'answer_mbti_score',
                'db_table_comment': '답변별 MBTI 점수',
                'managed': False,
            },
        ),
    ]
